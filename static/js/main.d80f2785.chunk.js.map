{"version":3,"sources":["components/CVSectionHeading.js","components/CVSectionButton.js","components/CVSectionInput.js","components/CVSectionForm.js","components/CVSection.js","App.js","index.js"],"names":["CVSectionHeading","props","title","CVSectionButton","value","handleAction","onClick","CVSectionInput","labelName","inputName","inputValue","handleChange","className","type","name","onChange","CVSectionForm","fieldObjects","fields","map","field","i","stateInputObj","reduce","acc","cv","useState","inputsState","setInputsState","edit","setEdit","ev","target","prevState","inputs","obj","id","preventDefault","CVSection","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sLAIeA,EAJU,SAACC,GACxB,OAAO,6BAAKA,EAAMC,S,qBCKLC,EANS,SAACF,GAAW,IAC1BG,EAAwBH,EAAxBG,MAAOC,EAAiBJ,EAAjBI,aAEf,OAAO,wBAAQC,QAASD,EAAjB,SAAgCD,KCa1BG,EAhBQ,SAACN,GAAW,IACzBO,EAAmDP,EAAnDO,UAAWC,EAAwCR,EAAxCQ,UAAWC,EAA6BT,EAA7BS,WAAYC,EAAiBV,EAAjBU,aAE1C,OACE,sBAAKC,UAAU,gBAAf,UACE,gCAAQJ,IACR,uBACEK,KAAK,OACLC,KAAML,EACNL,MAAOM,GAAc,GACrBK,SAAUJ,QC4EHK,EAlFO,SAACf,GAAW,IAG1BgB,EAFahB,EAAXiB,OAEoBC,KAAI,SAACC,EAAOC,GACtC,MAAO,CACLb,UAAWY,EACXX,UAAU,aAAD,OAAeY,OAItBC,EAAgBL,EAAaM,QAAO,SAACC,EAAKC,GAAQ,IAC9ChB,EAAcgB,EAAdhB,UACR,OAAO,2BAAGA,EAAY,IAAOe,KAC5B,IAb4B,EAeOE,mBAASJ,GAfhB,mBAexBK,EAfwB,KAeXC,EAfW,OAgBPF,oBAAS,GAhBF,mBAgBxBG,EAhBwB,KAgBlBC,EAhBkB,KAsBzBnB,EAAe,SAACoB,GAAQ,IAAD,EACHA,EAAGC,OAAnBlB,EADmB,EACnBA,KAAMV,EADa,EACbA,MACdwB,GAAe,SAACK,GAAD,mBAAC,eAAoBA,GAArB,kBAAiCnB,EAAOV,QAarD8B,EAAS,KA4Bb,OA1BIL,IACFK,EAASjB,EAAaE,KAAI,SAACgB,EAAKd,GAC9B,OACE,cAAC,EAAD,CAEEb,UAAW2B,EAAI3B,UACfC,UAAW0B,EAAI1B,UACfC,WAAYiB,EAAYQ,EAAI1B,WAC5BE,aAAcA,GAJTU,OAWRQ,IACHK,EAASjB,EAAaE,KAAI,SAACgB,EAAKd,GAC9B,OACE,sBAAKT,UAAU,gBAAf,UACE,gCAAQuB,EAAI3B,YACZ,qBAAKI,UAAU,SAAf,SAAyBe,EAAYQ,EAAI1B,eAFPY,OASxC,iCACGa,EACD,sBAAKE,GAAG,UAAR,UACE,cAAC,EAAD,CACEhC,MAAM,SACNC,aA5Ca,SAAC0B,GACpBD,GAAQ,GACRC,EAAGM,oBA4CC,cAAC,EAAD,CACEjC,MAAM,OACNC,aA3CW,SAAC0B,GAClBD,GAAQ,GACRC,EAAGM,2BCxBQC,EAXG,SAACrC,GAAW,IACpBC,EAAkBD,EAAlBC,MAAOgB,EAAWjB,EAAXiB,OAEf,OACE,0BAASN,UAAU,aAAnB,UACE,cAAC,EAAD,CAAkBV,MAAOA,IACzB,cAAC,EAAD,CAAegB,OAAQA,QCkBdqB,MAzBf,WAME,OACE,sBAAK3B,UAAU,MAAf,UACE,iDAEA,cAAC,EAAD,CACEV,MAAM,sBACNgB,OAXgB,CAAC,OAAQ,QAAS,WAYpC,cAAC,EAAD,CACEhB,MAAM,yBACNgB,OAbkB,CAAC,cAAe,iBAAkB,mBAetD,cAAC,EAAD,CACEhB,MAAM,uBACNgB,OAfiB,CAAC,eAAgB,iBAAkB,aAAc,aAAc,kB,MCDxFsB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d80f2785.chunk.js","sourcesContent":["const CVSectionHeading = (props) => {\n  return <h2>{props.title}</h2>\n}\n\nexport default CVSectionHeading\n","const CVSectionButton = (props) => {\n  const { value, handleAction } = props\n\n  return <button onClick={handleAction}>{value}</button>\n}\n\nexport default CVSectionButton\n","const CVSectionInput = (props) => {\n  const { labelName, inputName, inputValue, handleChange } = props\n\n  return (\n    <div className='input-wrapper'>\n      <label>{labelName}</label>\n      <input\n        type='text'\n        name={inputName}\n        value={inputValue || ''}\n        onChange={handleChange}\n      />\n    </div>\n  )\n}\n\nexport default CVSectionInput\n","import { useState } from 'react'\nimport CVSectionButton from './CVSectionButton'\nimport CVSectionInput from './CVSectionInput'\n\nconst CVSectionForm = (props) => {\n  const { fields } = props\n\n  const fieldObjects = fields.map((field, i) => {\n    return {\n      labelName: field,\n      inputName: `inputField${i}`,\n    }\n  })\n\n  const stateInputObj = fieldObjects.reduce((acc, cv) => {\n    const { inputName } = cv\n    return { [inputName]: '', ...acc }\n  }, [])\n\n  const [inputsState, setInputsState] = useState(stateInputObj)\n  const [edit, setEdit] = useState(true)\n\n  // This handleChange works for all input Fields\n  // in this form. It puts the changed value to\n  // the correspending input field using the name\n  // attribute of the changed input field\n  const handleChange = (ev) => {\n    const { name, value } = ev.target\n    setInputsState((prevState) => ({ ...prevState, [name]: value }))\n  }\n\n  const handleSubmit = (ev) => {\n    setEdit(false)\n    ev.preventDefault()\n  }\n\n  const handleEdit = (ev) => {\n    setEdit(true)\n    ev.preventDefault()\n  }\n\n  let inputs = null\n\n  if (edit) {\n    inputs = fieldObjects.map((obj, i) => {\n      return (\n        <CVSectionInput\n          key={i}\n          labelName={obj.labelName}\n          inputName={obj.inputName}\n          inputValue={inputsState[obj.inputName]}\n          handleChange={handleChange}\n        ></CVSectionInput>\n      )\n    })\n  }\n\n  // Or we want to have div's with latest input values\n  if (!edit) {\n    inputs = fieldObjects.map((obj, i) => {\n      return (\n        <div className='input-wrapper' key={i}>\n          <label>{obj.labelName}</label>\n          <div className='output'>{inputsState[obj.inputName]}</div>\n        </div>\n      )\n    })\n  }\n\n  return (\n    <form>\n      {inputs}\n      <div id='buttons'>\n        <CVSectionButton\n          value='Submit'\n          handleAction={handleSubmit}\n        ></CVSectionButton>\n        <CVSectionButton\n          value='Edit'\n          handleAction={handleEdit}\n        ></CVSectionButton>\n      </div>\n    </form>\n  )\n}\n\nexport default CVSectionForm\n","import CVSectionHeading from './CVSectionHeading'\nimport CVSectionForm from './CVSectionForm'\n\nconst CVSection = (props) => {\n  const { title, fields } = props\n\n  return (\n    <section className='cv-section'>\n      <CVSectionHeading title={title}></CVSectionHeading>\n      <CVSectionForm fields={fields}></CVSectionForm>\n    </section>\n  )\n}\n\nexport default CVSection\n","import CVSection from './components/CVSection'\n\nfunction App() {\n  const generalFields = ['Name', 'Email', 'Phone']\n  const educationFields = ['School name', 'Title of Study', 'Date of Study']\n  // prettier-ignore\n  const practiceFields = ['Company Name', 'Position title', 'Main tasks', 'Start Date', 'End Date']\n\n  return (\n    <div className='App'>\n      <h1>Create your CV!</h1>\n      {/* prettier-ignore*/}\n      <CVSection \n        title='General Information' \n        fields={generalFields}></CVSection>\n      <CVSection\n        title='Educational experience'\n        fields={educationFields}\n      ></CVSection>\n      <CVSection\n        title='Practical Experience'\n        fields={practiceFields}\n      ></CVSection>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './App.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}